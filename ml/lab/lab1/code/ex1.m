% Initializationclear all; close all; clc% Load the datax = load ('ex1_1x.dat') ;y = load ('ex1_1y.dat') ;m = length(y); % The number of training examples% Plot the datafigure;plot(x, y, 'o', 'MarkerSize', 10);set(gca, 'FontSize', 18);grid on;ylabel('Height in meters', 'FontSize', 25);xlabel('Age in years', 'FontSize',25);%Gradient descentx = [ones(m,1) x]; % Add a column of ones to xtheta = zeros(2, 1); % Initialize fitting parametersMAX_ITR = 1500;alpha = 0.07;%for it = 1:1:MAX_ITR    grad = (1.0/m)*x'*(x*theta - y);    theta = theta - alpha*grad;end% Print theta to screentheta% Plot the fitting linehold on;plot(x(:,2), x*theta, '-', 'LineWidth', 3);legend({'Training data', 'Linear regression'}, 'FontSize', 25);set(gcf, 'Position', [250 250 750 650]);% Predict values for ages 3.5 and 7predict1 = [1, 3.5]*thetapredict1 = [1, 7]*theta% Calculate J matrix% Grid over which we will calculate Jtheta0_vals = linspace(-3, 3, 100);theta1_vals = linspace(-1, 1, 100);% Initialize J_valsJ_vals = zeros(length(theta0_vals), length(theta1_vals));for i = 1:length(theta0_vals)    for j = 1:length(theta1_vals)	  t = [theta0_vals(i); theta1_vals(j)];    	  J_vals(i,j) = (0.5/m) .* (x * t - y)' * (x * t - y);    endend%% Due to the rule of surf, we have to transpose J_valsJ_vals = J_vals';% Surface plotfigure;surf(theta0_vals, theta1_vals, J_vals)set(gca, 'FontSize', 18);xlabel('\theta_0', 'FontSize', 25); ylabel('\theta_1', 'FontSize', 25);zlabel('J(\theta)', 'FontSize', 25);colorbar;% Contour plotfigure;% Plot J_vals as 15 contours spaced logarithmically between 0.01 and 100contour(theta0_vals, theta1_vals, J_vals, logspace(-2, 2, 15), 'LineWidth', 2);set(gca, 'FontSize', 18);xlabel('\theta_0', 'FontSize', 25);ylabel('\theta_1', 'FontSize', 25);grid on;